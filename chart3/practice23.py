'''
記事中に含まれるセクション名とそのレベル（例えば”== セクション名 ==”なら1）を表示せよ．
'''
# 必要なモジュールのインポート
import gzip
import json
import re
import pandas as pd


# [('==', '国名', '=='), ('==', '歴史', '=='), ('==', '地理', '=='), ('===', '主要都市', '==='), ('===', '気候', '==='), ('==', '政治', '=='), ('===', '元首', '==='), ('===', '法', '==='), ('===', '内政', '==='), ('===', '地方行政区分', '==='), ('===', '外交・軍事', '==='), ('==', '経済', '=='), ('===', '鉱業', '==='), ('===', '農業', '==='), ('===', '貿易', '==='), ('===', '不動産', '==='), ('===', 'エネルギー政策', '==='), ('===', '通貨', '==='), ('===', '企業', '==='), ('====', '通信', '===='), ('==', '交通', '=='), ('===', '道路', '==='), ('===', '鉄道', '==='), ('===', '海運', '==='), ('===', '航空', '==='), ('==', '科学技術', '=='), ('==', '国民', '=='), ('===', '言語', '==='), ('===', '宗教', '==='), ('===', '婚姻', '==='), ('===', '移住', '==='), ('===', '教育', '==='), ('===', '医療', '==='), ('==', '文化', '=='), ('===', '食文化', '==='), ('===', '文学', '==='), ('===', '哲学', '==='), ('===', '音楽', '==='), ('====', 'ポピュラー音楽', '===='), ('===', '映画', '==='), ('===', 'コメディ', '==='), ('===', '国花', '==='), ('===', '世界遺産', '==='), ('===', '祝祭日', '==='), ('===', 'スポーツ', '==='), ('====', 'サッカー', '===='), ('====', 'クリケット', '===='), ('====', '競馬', '===='), ('====', 'モータースポーツ', '===='), ('====', '野球', '===='), ('====', ' カーリング ', '===='), ('====', ' 自転車競技 ', '===='), ('==', '脚注', '=='), ('==', '関連項目', '=='), ('==', '外部リンク', '==')]
# Mikibook:nlp2020 fujikimikiya$ /usr/local/opt/python/bin/python3.7 /Users/fujikimikiya/Dev/nlp2020/chart3/practice23.py
# [('==', '国名', '=='), ('==', '歴史', '=='), ('==', '地理', '=='), ('===', '主要都市', '==='), ('===', '気候', '==='), ('==', '政治', '=='), ('===', '元首', '==='), ('===', '法', '==='), ('===', '内政', '==='), ('===', '地方行政区分', '==='), ('===', '外交・軍事', '==='), ('==', '経済', '=='), ('===', '鉱業', '==='), ('===', '農業', '==='), ('===', '貿易', '==='), ('===', '不動産', '==='), ('===', 'エネルギー政策', '==='), ('===', '通貨', '==='), ('===', '企業', '==='), ('====', '通信', '===='), ('==', '交通', '=='), ('===', '道路', '==='), ('===', '鉄道', '==='), ('===', '海運', '==='), ('===', '航空', '==='), ('==', '科学技術', '=='), ('==', '国民', '=='), ('===', '言語', '==='), ('===', '宗教', '==='), ('===', '婚姻', '==='), ('===', '移住', '==='), ('===', '教育', '==='), ('===', '医療', '==='), ('==', '文化', '=='), ('===', '食文化', '==='), ('===', '文学', '==='), ('===', '哲学', '==='), ('===', '音楽', '==='), ('====', 'ポピュラー音楽', '===='), ('===', '映画', '==='), ('===', 'コメディ', '==='), ('===', '国花', '==='), ('===', '世界遺産', '==='), ('===', '祝祭日', '==='), ('===', 'スポーツ', '==='), ('====', 'サッカー', '===='), ('====', 'クリケット', '===='), ('====', '競馬', '===='), ('====', 'モータースポーツ', '===='), ('====', '野球', '===='), ('====', ' カーリング ', '===='), ('====', ' 自転車競技 ', '===='), ('==', '脚注', '=='), ('==', '関連項目', '=='), ('==', '外部リンク', '==')]
# Mikibook:nlp2020 fujikimikiya$ /usr/local/opt/python/bin/python3.7 /Users/fujikimikiya/Dev/nlp2020/chart3/practice23.py
# [('==', '国名'), ('==', '歴史'), ('==', '地理'), ('===', '主要都市'), ('===', '気候'), ('==', '政治'), ('===', '元首'), ('===', '法'), ('===', '内政'), ('===', '地方行政区分'), ('===', '外交・軍事'), ('==', '経済'), ('===', '鉱業'), ('===', '農業'), ('===', '貿易'), ('===', '不動産'), ('===', 'エネルギー政策'), ('===', '通貨'), ('===', '企業'), ('====', '通信'), ('==', '交通'), ('===', '道路'), ('===', '鉄道'), ('===', '海運'), ('===', '航空'), ('==', '科学技術'), ('==', '国民'), ('===', '言語'), ('===', '宗教'), ('===', '婚姻'), ('===', '移住'), ('===', '教育'), ('===', '医療'), ('==', '文化'), ('===', '食文化'), ('===', '文学'), ('===', '哲学'), ('===', '音楽'), ('====', 'ポピュラー音楽'), ('===', '映画'), ('===', 'コメディ'), ('===', '国花'), ('===', '世界遺産'), ('===', '祝祭日'), ('===', 'スポーツ'), ('====', 'サッカー'), ('====', 'クリケット'), ('====', '競馬'), ('====', 'モータースポーツ'), ('====', '野球'), ('====', ' カーリング '), ('====', ' 自転車競技 '), ('==', '脚注'), ('==', '関連項目'), ('==', '外部リンク')]
# Mikibook:nlp2020 fujikimikiya$ /usr/local/opt/python/bin/python3.7 /Users/fujikimikiya/Dev/nlp2020/chart3/practice23.py
# [('==', '国名==', '=='), ('==', '歴史==', '=='), ('==', '地理==', '=='), ('===', '主要都市===', '==='), ('===', '気候===', '==='), ('==', '政治==', '=='), ('===', '元首===', '==='), ('===', '法===', '==='), ('===', '内政===', '==='), ('===', '地方行政区分===', '==='), ('===', '外交・軍事===', '==='), ('==', '経済==', '=='), ('===', '鉱業===', '==='), ('===', '農業===', '==='), ('===', '貿易===', '==='), ('===', '不動産===', '==='), ('===', 'エネルギー政策===', '==='), ('===', '通貨===', '==='), ('===', '企業===', '==='), ('====', '通信====', '===='), ('==', '交通==', '=='), ('===', '道路===', '==='), ('===', '鉄道===', '==='), ('===', '海運===', '==='), ('===', '航空===', '==='), ('==', '科学技術==', '=='), ('==', '国民==', '=='), ('===', '言語===', '==='), ('===', '宗教===', '==='), ('===', '婚姻===', '==='), ('===', '移住===', '==='), ('===', '教育===', '==='), ('===', '医療===', '==='), ('==', '文化==', '=='), ('===', '食文化===', '==='), ('===', '文学===', '==='), ('===', '哲学===', '==='), ('===', '音楽===', '==='), ('====', 'ポピュラー音楽====', '===='), ('===', '映画===', '==='), ('===', 'コメディ===', '==='), ('===', '国花===', '==='), ('===', '世界遺産===', '==='), ('===', '祝祭日===', '==='), ('===', 'スポーツ===', '==='), ('====', 'サッカー====', '===='), ('====', 'クリケット====', '===='), ('====', '競馬====', '===='), ('====', 'モータースポーツ====', '===='), ('====', '野球====', '===='), ('====', ' カーリング ====', '===='), ('====', ' 自転車競技 ====', '===='), ('==', '脚注==', '=='), ('==', '関連項目==', '=='), ('==', '外部リンク==', '==')]
# Mikibook:nlp2020 fujikimikiya$ /usr/local/opt/python/bin/python3.7 /Users/fujikimikiya/Dev/nlp2020/chart3/practice23.py
# [('==', '国名', '=='), ('==', '歴史', '=='), ('==', '地理', '=='), ('===', '主要都市', '==='), ('===', '気候', '==='), ('==', '政治', '=='), ('===', '元首', '==='), ('===', '法', '==='), ('===', '内政', '==='), ('===', '地方行政区分', '==='), ('===', '外交・軍事', '==='), ('==', '経済', '=='), ('===', '鉱業', '==='), ('===', '農業', '==='), ('===', '貿易', '==='), ('===', '不動産', '==='), ('===', 'エネルギー政策', '==='), ('===', '通貨', '==='), ('===', '企業', '==='), ('====', '通信', '===='), ('==', '交通', '=='), ('===', '道路', '==='), ('===', '鉄道', '==='), ('===', '海運', '==='), ('===', '航空', '==='), ('==', '科学技術', '=='), ('==', '国民', '=='), ('===', '言語', '==='), ('===', '宗教', '==='), ('===', '婚姻', '==='), ('===', '移住', '==='), ('===', '教育', '==='), ('===', '医療', '==='), ('==', '文化', '=='), ('===', '食文化', '==='), ('===', '文学', '==='), ('===', '哲学', '==='), ('===', '音楽', '==='), ('====', 'ポピュラー音楽', '===='), ('===', '映画', '==='), ('===', 'コメディ', '==='), ('===', '国花', '==='), ('===', '世界遺産', '==='), ('===', '祝祭日', '==='), ('===', 'スポーツ', '==='), ('====', 'サッカー', '===='), ('====', 'クリケット', '===='), ('====', '競馬', '===='), ('====', 'モータースポーツ', '===='), ('====', '野球', '===='), ('====', ' カーリング ', '===='), ('====', ' 自転車競技 ', '===='), ('==', '脚注', '=='), ('==', '関連項目', '=='), ('==', '外部リンク', '==')]
# Mikibook:nlp2020 fujikimikiya$ /usr/local/opt/python/bin/python3.7 /Users/fujikimikiya/Dev/nlp2020/chart3/practice23.py
# [('==', '国名', '=='), ('==', '歴史', '=='), ('==', '地理', '=='), ('===', '主要都市', '==='), ('===', '気候', '==='), ('==', '政治', '=='), ('===', '元首', '==='), ('===', '法', '==='), ('===', '内政', '==='), ('===', '地方行政区分', '==='), ('===', '外交・軍事', '==='), ('==', '経済', '=='), ('===', '鉱業', '==='), ('===', '農業', '==='), ('===', '貿易', '==='), ('===', '不動産', '==='), ('===', 'エネルギー政策', '==='), ('===', '通貨', '==='), ('===', '企業', '==='), ('====', '通信', '===='), ('==', '交通', '=='), ('===', '道路', '==='), ('===', '鉄道', '==='), ('===', '海運', '==='), ('===', '航空', '==='), ('==', '科学技術', '=='), ('==', '国民', '=='), ('===', '言語', '==='), ('===', '宗教', '==='), ('===', '婚姻', '==='), ('===', '移住', '==='), ('===', '教育', '==='), ('===', '医療', '==='), ('==', '文化', '=='), ('===', '食文化', '==='), ('===', '文学', '==='), ('===', '哲学', '==='), ('===', '音楽', '==='), ('====', 'ポピュラー音楽', '===='), ('===', '映画', '==='), ('===', 'コメディ', '==='), ('===', '国花', '==='), ('===', '世界遺産', '==='), ('===', '祝祭日', '==='), ('===', 'スポーツ', '==='), ('====', 'サッカー', '===='), ('====', 'クリケット', '===='), ('====', '競馬', '===='), ('====', 'モータースポーツ', '===='), ('====', '野球', '===='), ('====', ' カーリング ', '===='), ('====', ' 自転車競技 ', '===='), ('==', '脚注', '=='), ('==', '関連項目', '=='), ('==', '外部リンク', '==')]
    
def search():
    with gzip.open('chart3/jawiki-country.json.gz',mode='rt') as f:
        for line in f:
            json_load = json.loads(line)
            if json_load['title'] == 'イギリス':
                return json_load['text']

def count(result):
    for level in result:
        print(f'{level[1]}:{len(level[0])-1}')

#'(=+)([^=]+)\1\n'
result = re.findall(r'(=+)([^=]+)(=+)$',search(),re.MULTILINE)
count(result)